-- Fan's Obfuscator

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (v24 == 8) then
			v23 = nil;
			v23 = function(v25, v26, ...)
				local v35 = 0;
				local v36;
				local v37;
				local v38;
				local v39;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				while true do
					if (v35 == 0) then
						v36 = 0;
						v37 = nil;
						v38 = nil;
						v39 = nil;
						v35 = 1;
					end
					if (3 == v35) then
						v48 = nil;
						while true do
							local v51 = 0;
							while true do
								if (v51 == 1) then
									if (4 == v36) then
										local v53 = 0;
										while true do
											if (v53 == 1) then
												v47 = nil;
												v47 = function()
													local v67 = 0;
													local v68;
													local v69;
													local v70;
													local v71;
													local v72;
													local v73;
													local v74;
													while true do
														if (v67 == 2) then
															v72 = nil;
															v73 = nil;
															v67 = 3;
														end
														if (v67 == 1) then
															v70 = nil;
															v71 = nil;
															v67 = 2;
														end
														if (v67 == 3) then
															v74 = nil;
															while true do
																local v116 = 0;
																while true do
																	if (v116 == 0) then
																		if (v68 == 1) then
																			local v126 = 0;
																			while true do
																				if (v126 == 0) then
																					v73 = v42();
																					v74 = {};
																					v126 = 1;
																				end
																				if (1 == v126) then
																					for v148 = 1 + (761 - (433 + 328)), v73 do
																						local v149 = 0;
																						local v150;
																						local v151;
																						local v152;
																						while true do
																							if (v149 == 1) then
																								v152 = nil;
																								while true do
																									if (v150 == 0) then
																										local v175 = 0;
																										while true do
																											if (0 == v175) then
																												v151 = v40();
																												v152 = nil;
																												v175 = 1;
																											end
																											if (v175 == 1) then
																												v150 = 1;
																												break;
																											end
																										end
																									end
																									if (1 == v150) then
																										if (v151 == (1 + 0)) then
																											v152 = v40() ~= 0;
																										elseif (v151 == (1932 - (916 + 1014))) then
																											v152 = v43();
																										elseif (v151 == 3) then
																											v152 = v44();
																										end
																										v74[v148] = v152;
																										break;
																									end
																								end
																								break;
																							end
																							if (0 == v149) then
																								v150 = 0;
																								v151 = nil;
																								v149 = 1;
																							end
																						end
																					end
																					v72[(2725 - (1053 + 90)) - ((1319 - (675 + 454)) + (2994 - (358 + 1247)))] = v40();
																					v126 = 2;
																				end
																				if (v126 == 2) then
																					v68 = 2;
																					break;
																				end
																			end
																		end
																		if (v68 == 0) then
																			local v127 = 0;
																			while true do
																				if (v127 == 1) then
																					v71 = {};
																					v72 = {v69,v70,nil,v71};
																					v127 = 2;
																				end
																				if (v127 == 0) then
																					v69 = {};
																					v70 = {};
																					v127 = 1;
																				end
																				if (v127 == 2) then
																					v68 = 1;
																					break;
																				end
																			end
																		end
																		v116 = 1;
																	end
																	if (1 == v116) then
																		if (v68 == 2) then
																			local v128 = 0;
																			while true do
																				if (v128 == 1) then
																					for v153 = 1 + 0, v42() do
																						v71[v153] = v42();
																					end
																					return v72;
																				end
																				if (v128 == 0) then
																					for v155 = 1 + 0, v42() do
																						local v156 = 0;
																						local v157;
																						local v158;
																						while true do
																							if (v156 == 0) then
																								v157 = 0;
																								v158 = nil;
																								v156 = 1;
																							end
																							if (v156 == 1) then
																								while true do
																									if (v157 == 0) then
																										v158 = v40();
																										if (v39(v158, 1 + 0 + (0 - 0), 1) == (0 - 0)) then
																											local v181 = 0;
																											local v182;
																											local v183;
																											local v184;
																											local v185;
																											while true do
																												if (v181 == 0) then
																													v182 = 0;
																													v183 = nil;
																													v181 = 1;
																												end
																												if (2 == v181) then
																													while true do
																														if (3 == v182) then
																															if (v39(v184, (2481 - (437 + 414)) - ((1490 - (125 + 66)) + (1194 - 866)), 1781 - ((3390 - (1580 + 299)) + 267)) == (2 - 1)) then
																																v185[4] = v74[v185[(5 + 7) - (10 - 2)]];
																															end
																															v69[v155] = v185;
																															break;
																														end
																														if (0 == v182) then
																															local v201 = 0;
																															while true do
																																if (v201 == 1) then
																																	v182 = 1;
																																	break;
																																end
																																if (v201 == 0) then
																																	v183 = v39(v158, 336 - (304 + 30), 8 - 5);
																																	v184 = v39(v158, 9 - 5, (1932 - (125 + 1754)) - (30 + (45 - 28)));
																																	v201 = 1;
																																end
																															end
																														end
																														if (2 == v182) then
																															local v202 = 0;
																															while true do
																																if (v202 == 1) then
																																	v182 = 3;
																																	break;
																																end
																																if (0 == v202) then
																																	if (v39(v184, 1 + 0, 1) == (482 - (357 + 124))) then
																																		v185[1 + 1 + (466 - (355 + 111))] = v74[v185[1 + 1]];
																																	end
																																	if (v39(v184, 1 + 1, 2) == (4 - 3)) then
																																		v185[1434 - (1218 + 213)] = v74[v185[3]];
																																	end
																																	v202 = 1;
																																end
																															end
																														end
																														if (1 == v182) then
																															local v203 = 0;
																															while true do
																																if (v203 == 1) then
																																	v182 = 2;
																																	break;
																																end
																																if (v203 == 0) then
																																	v185 = {v41(),v41(),nil,nil};
																																	if (v183 == (0 + 0)) then
																																		local v217 = 0;
																																		local v218;
																																		while true do
																																			if (v217 == 0) then
																																				v218 = 0;
																																				while true do
																																					if (v218 == 0) then
																																						v185[9 - 6] = v41();
																																						v185[877 - (607 + 266)] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v183 == (1 + 0)) then
																																		v185[(15 - 7) - (1690 - (1420 + 265))] = v42();
																																	elseif (v183 == (1 + 1)) then
																																		v185[1 + 2] = v42() - (((2 - 1) + 1) ^ 16);
																																	elseif (v183 == (1783 - (1749 + 31))) then
																																		local v226 = 0;
																																		local v227;
																																		while true do
																																			if (v226 == 0) then
																																				v227 = 0;
																																				while true do
																																					if (v227 == 0) then
																																						v185[544 - (195 + 141 + 205)] = v42() - ((977 - ((362 - 76) + 105 + 584)) ^ (13 + 3));
																																						v185[3 + 1] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v203 = 1;
																																end
																															end
																														end
																													end
																													break;
																												end
																												if (v181 == 1) then
																													v184 = nil;
																													v185 = nil;
																													v181 = 2;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					for v159 = 1 + (595 - (185 + 410)), v42() do
																						v70[v159 - (1 + 0)] = v47();
																					end
																					v128 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v67 == 0) then
															v68 = 0;
															v69 = nil;
															v67 = 1;
														end
													end
												end;
												v53 = 2;
											end
											if (v53 == 0) then
												v46 = nil;
												v46 = function(...)
													return {...}, v20("#", ...);
												end;
												v53 = 1;
											end
											if (v53 == 2) then
												v36 = 5;
												break;
											end
										end
									end
									if (1 == v36) then
										local v54 = 0;
										while true do
											if (v54 == 2) then
												v36 = 2;
												break;
											end
											if (v54 == 0) then
												v39 = function(v59, v60, v61)
													if v61 then
														local v105 = 0;
														local v106;
														local v107;
														while true do
															if (1 == v105) then
																while true do
																	if (0 == v106) then
																		local v123 = 0;
																		while true do
																			if (v123 == 0) then
																				v107 = (v59 / (((9 - 7) - 0) ^ (v60 - (1 + 0 + (1632 - (1546 + 86)) + 0)))) % ((2 + 0) ^ (((v61 - (1 - (1714 - (1160 + 554)))) - (v60 - (((5 - 2) - (1 + 1)) - (0 - 0)))) + ((27 + 3 + (1959 - (37 + 1428))) - ((1817 - (399 + 1093)) + ((1920 - (12 + 98)) - (207 + 1405))))));
																				return v107 - (v107 % (2 - (1928 - (1688 + 239))));
																			end
																		end
																	end
																end
																break;
															end
															if (v105 == 0) then
																v106 = 0;
																v107 = nil;
																v105 = 1;
															end
														end
													else
														local v108 = 0;
														local v109;
														local v110;
														while true do
															if (v108 == 1) then
																while true do
																	if (v109 == 0) then
																		local v124 = 0;
																		while true do
																			if (v124 == 0) then
																				v110 = (((4179 - (1398 + 571)) - (601 + (539 - 348))) - (((3237 + 1542) - 3647) + 111 + 140 + 32 + 1)) ^ (v60 - (4 - 3));
																				return (((v59 % (v110 + v110)) >= v110) and (1 + 0)) or (0 - 0);
																			end
																		end
																	end
																end
																break;
															end
															if (v108 == 0) then
																v109 = 0 + 0;
																v110 = nil;
																v108 = 1;
															end
														end
													end
												end;
												v40 = nil;
												v54 = 1;
											end
											if (v54 == 1) then
												v40 = function()
													local v75 = 0;
													local v76;
													local v77;
													while true do
														if (v75 == 0) then
															v76 = 0;
															v77 = nil;
															v75 = 1;
														end
														if (1 == v75) then
															while true do
																local v117 = 0;
																while true do
																	if (v117 == 0) then
																		if (v76 == 0) then
																			local v129 = 0;
																			while true do
																				if (v129 == 1) then
																					v76 = 1;
																					break;
																				end
																				if (v129 == 0) then
																					v77 = v9(v25, v37, v37);
																					v37 = v37 + (2 - 1);
																					v129 = 1;
																				end
																			end
																		end
																		if (v76 == (1540 - (951 + 588))) then
																			return v77;
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v41 = nil;
												v54 = 2;
											end
										end
									end
									v51 = 2;
								end
								if (v51 == 2) then
									if (v36 == 3) then
										local v55 = 0;
										while true do
											if (0 == v55) then
												v43 = function()
													local v78 = 0;
													local v79;
													local v80;
													local v81;
													local v82;
													local v83;
													local v84;
													local v85;
													while true do
														if (v78 == 1) then
															v81 = nil;
															v82 = nil;
															v78 = 2;
														end
														if (v78 == 2) then
															v83 = nil;
															v84 = nil;
															v78 = 3;
														end
														if (v78 == 3) then
															v85 = nil;
															while true do
																local v118 = 0;
																while true do
																	if (v118 == 1) then
																		if (0 == v79) then
																			local v130 = 0;
																			while true do
																				if (0 == v130) then
																					v80 = v42();
																					v81 = v42();
																					v130 = 1;
																				end
																				if (v130 == 1) then
																					v79 = 2 - 1;
																					break;
																				end
																			end
																		end
																		if (v79 == 3) then
																			local v131 = 0;
																			while true do
																				if (v131 == 0) then
																					if (v84 == (((1887 - (748 + 505)) - ((2464 - (924 + 1006)) + 100)) - 0)) then
																						if (v83 == 0) then
																							return v85 * ((0 + 0) - 0);
																						else
																							local v173 = 0;
																							local v174;
																							while true do
																								if (v173 == 0) then
																									v174 = 0;
																									while true do
																										if (v174 == (0 + 0)) then
																											v84 = 1334 - ((625 - 194) + (1325 - (155 + 268)));
																											v82 = 0 - 0;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v84 == 2047) then
																						return ((v83 == 0) and (v85 * ((2 - (1 + 0)) / ((740 - ((1121 - (298 + 590)) + 507)) + (152 - (5 + 147)))))) or (v85 * NaN);
																					end
																					return v16(v85, v84 - (230 + 793)) * (v82 + (v83 / ((2 - (1103 - (774 + 329))) ^ (79 - 27))));
																				end
																			end
																		end
																		break;
																	end
																	if (v118 == 0) then
																		if (v79 == 2) then
																			local v132 = 0;
																			while true do
																				if (v132 == 0) then
																					v84 = v39(v81, 1 + 0 + 20, 17 + 14);
																					v85 = ((v39(v81, 132 - 100) == (((3064 - 2178) + (1309 - (417 + 292))) - (328 + (403 - 252) + (2502 - 1496)))) and -((2058 - 1142) - (488 + 427))) or (3 - 2);
																					v132 = 1;
																				end
																				if (1 == v132) then
																					v79 = 3;
																					break;
																				end
																			end
																		end
																		if (v79 == 1) then
																			local v133 = 0;
																			while true do
																				if (v133 == 1) then
																					v79 = 2;
																					break;
																				end
																				if (v133 == 0) then
																					v82 = 1 + 0;
																					v83 = (v39(v81, 1 + 0 + 0, ((5992 - 4060) - (909 + (1624 - (731 + 137)))) - ((148 - 53) + ((2101 - 1538) - (1612 - (137 + 1064))))) * ((1784 - (1424 + 358)) ^ (1095 - (953 + 110)))) + v80;
																					v133 = 1;
																				end
																			end
																		end
																		v118 = 1;
																	end
																end
															end
															break;
														end
														if (v78 == 0) then
															v79 = 0;
															v80 = nil;
															v78 = 1;
														end
													end
												end;
												v44 = nil;
												v55 = 1;
											end
											if (v55 == 2) then
												v36 = 4;
												break;
											end
											if (v55 == 1) then
												v44 = function(v62)
													local v86 = 0;
													local v87;
													local v88;
													local v89;
													while true do
														if (v86 == 0) then
															v87 = 0;
															v88 = nil;
															v86 = 1;
														end
														if (1 == v86) then
															v89 = nil;
															while true do
																local v119 = 0;
																while true do
																	if (v119 == 0) then
																		if (v87 == 0) then
																			local v134 = 0;
																			while true do
																				if (v134 == 1) then
																					v87 = 2 - 1;
																					break;
																				end
																				if (v134 == 0) then
																					v88 = nil;
																					if not v62 then
																						local v170 = 0;
																						local v171;
																						while true do
																							if (v170 == 0) then
																								v171 = 0 - 0;
																								while true do
																									if (v171 == 0) then
																										v62 = v42();
																										if (v62 == ((0 + 0 + 0) - (0 - 0))) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v134 = 1;
																				end
																			end
																		end
																		if (v87 == 2) then
																			local v135 = 0;
																			while true do
																				if (v135 == 0) then
																					v89 = {};
																					for v161 = (3 - 1) - (2000 - (867 + 1132)), #v88 do
																						v89[v161] = v10(v9(v11(v88, v161, v161)));
																					end
																					v135 = 1;
																				end
																				if (1 == v135) then
																					v87 = 2 + 1;
																					break;
																				end
																			end
																		end
																		v119 = 1;
																	end
																	if (v119 == 1) then
																		if (3 == v87) then
																			return v14(v89);
																		end
																		if (v87 == (1 + 0)) then
																			local v136 = 0;
																			while true do
																				if (v136 == 1) then
																					v87 = 1 + 1;
																					break;
																				end
																				if (v136 == 0) then
																					v88 = v11(v25, v37, (v37 + v62) - (3 - (1808 - (1024 + 782))));
																					v37 = v37 + v62;
																					v136 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v45 = v42;
												v55 = 2;
											end
										end
									end
									if (2 == v36) then
										local v56 = 0;
										while true do
											if (v56 == 1) then
												v42 = function()
													local v90 = 0;
													local v91;
													local v92;
													local v93;
													local v94;
													local v95;
													while true do
														if (v90 == 0) then
															v91 = 0 - 0;
															v92 = nil;
															v90 = 1;
														end
														if (v90 == 2) then
															v95 = nil;
															while true do
																local v120 = 0;
																while true do
																	if (v120 == 0) then
																		if (v91 == 1) then
																			return (v95 * 16777216) + (v94 * (((66881 - (137 + 734)) - ((1596 - (721 + 865)) + 34)) - (156 + 32 + 5 + 13 + 224))) + (v93 * (38 + (684 - (385 + 81)))) + v92;
																		end
																		if (v91 == (288 - (93 + 195))) then
																			local v137 = 0;
																			while true do
																				if (v137 == 0) then
																					v92, v93, v94, v95 = v9(v25, v37, v37 + ((1594 - (2135 - (799 + 159))) - ((92 - (35 + 36)) + (519 - (59 + 67)))));
																					v37 = v37 + 1 + ((2580 - 1975) - (331 + 271));
																					v137 = 1;
																				end
																				if (v137 == 1) then
																					v91 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v90 == 1) then
															v93 = nil;
															v94 = nil;
															v90 = 2;
														end
													end
												end;
												v43 = nil;
												v56 = 2;
											end
											if (v56 == 0) then
												v41 = function()
													local v96 = 0;
													local v97;
													local v98;
													local v99;
													while true do
														if (v96 == 0) then
															v97 = 462 - (352 + 110);
															v98 = nil;
															v96 = 1;
														end
														if (v96 == 1) then
															v99 = nil;
															while true do
																local v121 = 0;
																while true do
																	if (v121 == 0) then
																		if (v97 == (1082 - (1037 + 44))) then
																			return (v99 * (((1325 - (959 + 245)) + 562) - (150 + 203 + 61 + (43 - 30)))) + v98;
																		end
																		if (v97 == 0) then
																			local v138 = 0;
																			while true do
																				if (v138 == 0) then
																					v98, v99 = v9(v25, v37, v37 + (((2100 - (785 + 853)) - (7 + 309)) - (59 + 49 + 9 + ((240 + 237) - (260 + 164 + 26)))));
																					v37 = v37 + 1 + 1;
																					v138 = 1;
																				end
																				if (1 == v138) then
																					v97 = 3 - 2;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v42 = nil;
												v56 = 1;
											end
											if (v56 == 2) then
												v36 = 3;
												break;
											end
										end
									end
									break;
								end
								if (v51 == 0) then
									if (v36 == 5) then
										local v57 = 0;
										while true do
											if (v57 == 1) then
												return v48(v47(), {}, v26)(...);
											end
											if (v57 == 0) then
												v48 = nil;
												v48 = function(v63, v64, v65)
													local v100 = 0;
													local v101;
													local v102;
													local v103;
													local v104;
													while true do
														if (v100 == 1) then
															v103 = nil;
															v104 = nil;
															v100 = 2;
														end
														if (v100 == 2) then
															while true do
																local v122 = 0;
																while true do
																	if (v122 == 0) then
																		if (v101 == 0) then
																			local v139 = 0;
																			while true do
																				if (v139 == 1) then
																					v101 = 1;
																					break;
																				end
																				if (v139 == 0) then
																					v102 = v63[1 + 0 + (983 - (376 + 607))];
																					v103 = v63[623 - (188 + 433)];
																					v139 = 1;
																				end
																			end
																		end
																		if (1 == v101) then
																			local v140 = 0;
																			while true do
																				if (0 == v140) then
																					v104 = v63[(3406 - 2402) - (676 + 55 + 270)];
																					return function(...)
																						local v163 = 0;
																						local v164;
																						local v165;
																						local v166;
																						local v167;
																						local v168;
																						local v169;
																						while true do
																							if (v163 == 1) then
																								v166 = nil;
																								v167 = nil;
																								v163 = 2;
																							end
																							if (v163 == 0) then
																								v164 = 0;
																								v165 = nil;
																								v163 = 1;
																							end
																							if (2 == v163) then
																								v168 = nil;
																								v169 = nil;
																								v163 = 3;
																							end
																							if (3 == v163) then
																								while true do
																									if (v164 == 0) then
																										local v177 = 0;
																										while true do
																											if (v177 == 1) then
																												v164 = 1;
																												break;
																											end
																											if (v177 == 0) then
																												v165 = 70 - (5 + 64);
																												v166 = -(392 - ((1023 - 634) + 1 + 1));
																												v177 = 1;
																											end
																										end
																									end
																									if (v164 == 3) then
																										_G['A'], _G['B'] = v46(v19(v169));
																										if not _G['A'][1 + (1711 - (760 + 951))] then
																											local v186 = 0;
																											local v187;
																											local v188;
																											while true do
																												if (v186 == 0) then
																													v187 = 0;
																													v188 = nil;
																													v186 = 1;
																												end
																												if (v186 == 1) then
																													while true do
																														if (v187 == 0) then
																															v188 = v63[4][v165] or "?";
																															error(v7("\98\167\101\92\11\69\228\114\71\9\94\182\55\84\15\17\159", "\49\196\23\53\123") .. v188 .. v7("\18\154", "\79\160\149\105\131\56\63") .. _G['A'][268 - (103 + 163)]);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											return v21(_G['A'], 771 - (285 + 484), _G['B']);
																										end
																										break;
																									end
																									if (1 == v164) then
																										local v178 = 0;
																										while true do
																											if (v178 == 0) then
																												v167 = {...};
																												v168 = v20("#", ...) - (1 + 0);
																												v178 = 1;
																											end
																											if (1 == v178) then
																												v164 = 2;
																												break;
																											end
																										end
																									end
																									if (v164 == 2) then
																										local v179 = 0;
																										while true do
																											if (v179 == 0) then
																												v169 = nil;
																												v169 = function()
																													local v189 = 0;
																													local v190;
																													local v191;
																													local v192;
																													local v193;
																													local v194;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													local v199;
																													while true do
																														if (v189 == 0) then
																															v190 = v102;
																															v191 = v103;
																															v192 = v104;
																															v193 = v46;
																															v189 = 1;
																														end
																														if (v189 == 2) then
																															v197 = (v168 - v192) + ((1 + 1) - (1 + 0));
																															v198 = nil;
																															v199 = nil;
																															while true do
																																local v204 = 0;
																																local v205;
																																while true do
																																	if (v204 == 0) then
																																		v205 = 0;
																																		while true do
																																			if (v205 == 1) then
																																				if (v199 <= 32) then
																																					if (v199 <= (10 + 5)) then
																																						if (v199 <= 7) then
																																							if (v199 <= (469 - (151 + 315))) then
																																								if (v199 <= 1) then
																																									if (v199 > (0 - 0)) then
																																										v196[v198[3 - 1]] = v48(v191[v198[(2135 - (396 + 528)) - (270 + (2127 - 1189))]], nil, v65);
																																									else
																																										v64[v198[(445 - (83 + 355)) - (990 - (242 + 744))]] = v196[v198[2]];
																																									end
																																								elseif (v199 > (5 - 3)) then
																																									v65[v198[(3 - 2) + (5 - 3)]] = v196[v198[2 + (0 - 0)]];
																																								else
																																									local v235 = 0;
																																									local v236;
																																									local v237;
																																									while true do
																																										if (v235 == 1) then
																																											while true do
																																												if (v236 == 0) then
																																													v237 = v198[132 - ((1719 - (471 + 1195)) + (1327 - (461 + 789)))];
																																													do
																																														return v196[v237](v21(v196, v237 + ((1710 - (215 + 828)) - (54 + 612)), v198[(3 - 2) + 2]));
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (v235 == 0) then
																																											v236 = 0;
																																											v237 = nil;
																																											v235 = 1;
																																										end
																																									end
																																								end
																																							elseif (v199 <= (17 - 12)) then
																																								if (v199 == (15 - 11)) then
																																									if (v196[v198[2]] ~= v198[4]) then
																																										v165 = v165 + (2 - 1);
																																									else
																																										v165 = v198[(1396 - (964 + 421)) - (1286 - (831 + 447))];
																																									end
																																								else
																																									local v238 = 0;
																																									local v239;
																																									local v240;
																																									while true do
																																										if (v238 == 0) then
																																											v239 = 0;
																																											v240 = nil;
																																											v238 = 1;
																																										end
																																										if (v238 == 1) then
																																											while true do
																																												if (v239 == 0) then
																																													v240 = v198[1 + 1];
																																													v196[v240] = v196[v240]();
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																							elseif (v199 > 6) then
																																								v196[v198[1966 - (1240 + 724)]] = v64[v198[(859 + 422) - (435 + (2284 - (303 + 1138)))]];
																																							else
																																								local v243 = 0;
																																								local v244;
																																								local v245;
																																								local v246;
																																								local v247;
																																								while true do
																																									if (v243 == 0) then
																																										v244 = 0;
																																										v245 = nil;
																																										v243 = 1;
																																									end
																																									if (v243 == 2) then
																																										while true do
																																											if (v244 == 0) then
																																												local v388 = 0;
																																												while true do
																																													if (v388 == 1) then
																																														v244 = 1;
																																														break;
																																													end
																																													if (v388 == 0) then
																																														v245 = v198[2];
																																														v246 = {v196[v245](v21(v196, v245 + (4 - (1396 - (18 + 1375))), v166))};
																																														v388 = 1;
																																													end
																																												end
																																											end
																																											if (v244 == 1) then
																																												v247 = 0;
																																												for v425 = v245, v198[1835 - (1785 + 46)] do
																																													local v426 = 0;
																																													local v427;
																																													while true do
																																														if (v426 == 0) then
																																															v427 = 0;
																																															while true do
																																																if (v427 == 0) then
																																																	v247 = v247 + (2 - 1);
																																																	v196[v425] = v246[v247];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v243 == 1) then
																																										v246 = nil;
																																										v247 = nil;
																																										v243 = 2;
																																									end
																																								end
																																							end
																																						elseif (v199 <= (14 - 3)) then
																																							if (v199 <= 9) then
																																								if (v199 == (1363 - (813 + 542))) then
																																									if (v196[v198[1 + 1]] < v198[(1705 - (1234 + 330)) - (79 + 11 + (99 - 52))]) then
																																										v165 = v165 + 1;
																																									else
																																										v165 = v198[11 - 8];
																																									end
																																								else
																																									v196[v198[(83 + 3) - ((26 - 15) + (253 - 180))]] = v196[v198[4 - 1]] * v198[728 - (196 + 528)];
																																								end
																																							elseif (v199 == ((1552 - 1028) - ((823 - 422) + 113))) then
																																								if v196[v198[1722 - (749 + 971)]] then
																																									v165 = v165 + 1 + 0 + (0 - 0);
																																								else
																																									v165 = v198[3];
																																								end
																																							else
																																								local v249 = 0;
																																								local v250;
																																								local v251;
																																								local v252;
																																								local v253;
																																								local v254;
																																								while true do
																																									if (v249 == 1) then
																																										v252 = nil;
																																										v253 = nil;
																																										v249 = 2;
																																									end
																																									if (v249 == 0) then
																																										v250 = 0;
																																										v251 = nil;
																																										v249 = 1;
																																									end
																																									if (v249 == 2) then
																																										v254 = nil;
																																										while true do
																																											if (v250 == 1) then
																																												local v389 = 0;
																																												while true do
																																													if (v389 == 1) then
																																														v250 = 2;
																																														break;
																																													end
																																													if (0 == v389) then
																																														v166 = (v253 + v251) - 1;
																																														v254 = 0 + 0;
																																														v389 = 1;
																																													end
																																												end
																																											end
																																											if (v250 == 2) then
																																												for v428 = v251, v166 do
																																													local v429 = 0;
																																													local v430;
																																													while true do
																																														if (v429 == 0) then
																																															v430 = 0;
																																															while true do
																																																if (v430 == 0) then
																																																	v254 = v254 + (2 - (1240 - (195 + 1044)));
																																																	v196[v428] = v252[v254];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (0 == v250) then
																																												local v390 = 0;
																																												while true do
																																													if (v390 == 1) then
																																														v250 = 1;
																																														break;
																																													end
																																													if (v390 == 0) then
																																														v251 = v198[8 - 6];
																																														v252, v253 = v193(v196[v251](v21(v196, v251 + (1673 - (717 + 828 + 127)), v198[3 + 0])));
																																														v390 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v199 <= (807 - (392 + 402))) then
																																							if (v199 > ((115 - 88) - (8 + 7))) then
																																								v196[v198[5 - 3]] = v196[v198[1496 - (1325 + 168)]] - v198[(4 + 7) - 7];
																																							else
																																								local v256 = 0;
																																								local v257;
																																								local v258;
																																								while true do
																																									if (v256 == 1) then
																																										while true do
																																											if (v257 == 0) then
																																												v258 = v198[146 - (16 + 128)];
																																												v196[v258](v21(v196, v258 + ((1 + 1) - (1506 - (52 + 1453))), v198[(4253 - 2292) - ((1447 - (36 + 9)) + 10 + 546)]));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v256 == 0) then
																																										v257 = 0;
																																										v258 = nil;
																																										v256 = 1;
																																									end
																																								end
																																							end
																																						elseif (v199 > ((2106 - 975) - ((1719 - (86 + 1254)) + 79 + 659))) then
																																							for v360 = v198[1 + 1], v198[852 - (370 + 479)] do
																																								v196[v360] = nil;
																																							end
																																						else
																																							local v259 = 0;
																																							local v260;
																																							local v261;
																																							local v262;
																																							local v263;
																																							local v264;
																																							local v265;
																																							while true do
																																								if (v259 == 3) then
																																									while true do
																																										if (v260 == 0) then
																																											local v392 = 0;
																																											while true do
																																												if (v392 == 1) then
																																													v260 = 1;
																																													break;
																																												end
																																												if (0 == v392) then
																																													v261 = v198[3 - 1];
																																													v262 = v198[228 - (62 + 162)];
																																													v392 = 1;
																																												end
																																											end
																																										end
																																										if (v260 == 2) then
																																											local v393 = 0;
																																											while true do
																																												if (1 == v393) then
																																													v260 = 3;
																																													break;
																																												end
																																												if (v393 == 0) then
																																													for v482 = 3 - (6 - 4), v262 do
																																														v196[v263 + v482] = v264[v482];
																																													end
																																													v265 = v264[1 + (0 - 0)];
																																													v393 = 1;
																																												end
																																											end
																																										end
																																										if (v260 == 1) then
																																											local v394 = 0;
																																											while true do
																																												if (v394 == 1) then
																																													v260 = 2;
																																													break;
																																												end
																																												if (v394 == 0) then
																																													v263 = v261 + (1690 - (1300 + (1404 - (956 + 60))));
																																													v264 = {v196[v261](v196[v261 + (1245 - (1046 + 198))], v196[v263])};
																																													v394 = 1;
																																												end
																																											end
																																										end
																																										if (v260 == 3) then
																																											if v265 then
																																												local v448 = 0;
																																												local v449;
																																												while true do
																																													if (v448 == 0) then
																																														v449 = 0;
																																														while true do
																																															if (v449 == 0) then
																																																v196[v263] = v265;
																																																v165 = v198[93 - (71 + 19)];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											else
																																												v165 = v165 + 1 + 0 + 0 + 0;
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v259 == 2) then
																																									v264 = nil;
																																									v265 = nil;
																																									v259 = 3;
																																								end
																																								if (v259 == 0) then
																																									v260 = 0;
																																									v261 = nil;
																																									v259 = 1;
																																								end
																																								if (v259 == 1) then
																																									v262 = nil;
																																									v263 = nil;
																																									v259 = 2;
																																								end
																																							end
																																						end
																																					elseif (v199 <= (89 - (28 + 38))) then
																																						if (v199 <= (16 + 3)) then
																																							if (v199 <= 17) then
																																								if (v199 == (255 - ((548 - 315) + (718 - (278 + 434))))) then
																																									local v266 = 0;
																																									local v267;
																																									local v268;
																																									local v269;
																																									local v270;
																																									while true do
																																										if (v266 == 0) then
																																											v267 = 0;
																																											v268 = nil;
																																											v266 = 1;
																																										end
																																										if (v266 == 2) then
																																											while true do
																																												if (v267 == 0) then
																																													local v395 = 0;
																																													while true do
																																														if (v395 == 0) then
																																															v268 = v198[1 + 1];
																																															v269 = v196[v268];
																																															v395 = 1;
																																														end
																																														if (v395 == 1) then
																																															v267 = 1;
																																															break;
																																														end
																																													end
																																												end
																																												if (v267 == 1) then
																																													v270 = v196[v268 + (3 - 1)];
																																													if (v270 > ((877 - (810 + 67)) - (484 - (336 + 148)))) then
																																														if (v269 > v196[v268 + 1]) then
																																															v165 = v198[10 - 7];
																																														else
																																															v196[v268 + 3] = v269;
																																														end
																																													elseif (v269 < v196[v268 + (1 - 0)]) then
																																														v165 = v198[(2 - 0) + 1];
																																													else
																																														v196[v268 + 3] = v269;
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (v266 == 1) then
																																											v269 = nil;
																																											v270 = nil;
																																											v266 = 2;
																																										end
																																									end
																																								else
																																									local v271 = 0;
																																									local v272;
																																									local v273;
																																									local v274;
																																									while true do
																																										if (v271 == 0) then
																																											v272 = 0;
																																											v273 = nil;
																																											v271 = 1;
																																										end
																																										if (v271 == 1) then
																																											v274 = nil;
																																											while true do
																																												if (v272 == 1) then
																																													for v431 = v273 + 1 + 0 + 0 + 0, v198[(1207 - (1204 + 1)) + 1] do
																																														v15(v274, v196[v431]);
																																													end
																																													break;
																																												end
																																												if (v272 == 0) then
																																													local v397 = 0;
																																													while true do
																																														if (v397 == 0) then
																																															v273 = v198[2];
																																															v274 = v196[v273];
																																															v397 = 1;
																																														end
																																														if (v397 == 1) then
																																															v272 = 1;
																																															break;
																																														end
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																							elseif (v199 > (5 + 13)) then
																																								v196[v198[(1769 - (1155 + 609)) - 3]] = v196[v198[1 + 2]] + v196[v198[14 - 10]];
																																							else
																																								local v276 = 0;
																																								local v277;
																																								local v278;
																																								while true do
																																									if (v276 == 0) then
																																										v277 = 0;
																																										v278 = nil;
																																										v276 = 1;
																																									end
																																									if (v276 == 1) then
																																										while true do
																																											if (v277 == 0) then
																																												v278 = v198[2 + 0];
																																												v196[v278](v21(v196, v278 + (2 - (1329 - (850 + 478))), v166));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v199 <= ((694 + 98) - (54 + 671 + 46))) then
																																							if (v199 == ((246 - (192 + 14)) - (1117 - (372 + 725)))) then
																																								v196[v198[8 - 6]] = v196[v198[2 + 1]];
																																							else
																																								v196[v198[4 - 2]] = v198[1537 - (46 + 1488)];
																																							end
																																						elseif (v199 > ((46 - (11 + 21)) + (27 - 19))) then
																																							if (v196[v198[(6 - 4) - 0]] == v198[4]) then
																																								v165 = v165 + ((1473 - (856 + 614)) - (1 + 1));
																																							else
																																								v165 = v198[818 - (611 + 44 + 27 + 133)];
																																							end
																																						else
																																							local v283 = 0;
																																							local v284;
																																							local v285;
																																							local v286;
																																							while true do
																																								if (v283 == 0) then
																																									v284 = 0;
																																									v285 = nil;
																																									v283 = 1;
																																								end
																																								if (v283 == 1) then
																																									v286 = nil;
																																									while true do
																																										if (0 == v284) then
																																											local v399 = 0;
																																											while true do
																																												if (v399 == 0) then
																																													v285 = v198[(9 - 5) - (1773 - (1524 + 248))];
																																													v286 = v196[v285];
																																													v399 = 1;
																																												end
																																												if (v399 == 1) then
																																													v284 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v284 == 1) then
																																											for v432 = v285 + 1, v198[1 + 3] do
																																												v286 = v286 .. v196[v432];
																																											end
																																											v196[v198[1187 - (543 + 642)]] = v286;
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v199 <= ((388 - 307) - ((61 - 48) + (503 - (244 + 218))))) then
																																						if (v199 <= ((4 - 2) + (108 - 85))) then
																																							if (v199 > 24) then
																																								v196[v198[5 - 3]] = #v196[v198[1761 - (1431 + 327)]];
																																							else
																																								v196[v198[4 - (2 + 0)]][v196[v198[(10 + 2) - 9]]] = v196[v198[4 + 0]];
																																							end
																																						elseif (v199 == 26) then
																																							local v290 = 0;
																																							local v291;
																																							while true do
																																								if (v290 == 0) then
																																									v291 = 0;
																																									while true do
																																										if (v291 == 0) then
																																											v196[v198[111 - (71 + 38)]] = v198[3] ~= (0 - 0);
																																											v165 = v165 + 1 + 0;
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							v196[v198[(849 - (163 + 684)) + 0]] = v198[3] ~= (0 + 0);
																																						end
																																					elseif (v199 <= (59 - 30)) then
																																						if (v199 > (69 - 41)) then
																																							local v293 = 0;
																																							local v294;
																																							local v295;
																																							while true do
																																								if (v293 == 1) then
																																									while true do
																																										if (v294 == 0) then
																																											v295 = v198[960 - (839 + 119)];
																																											v196[v295] = v196[v295](v196[v295 + 1 + 0 + 0 + 0]);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v293 == 0) then
																																									v294 = 0;
																																									v295 = nil;
																																									v293 = 1;
																																								end
																																							end
																																						else
																																							local v296 = 0;
																																							local v297;
																																							local v298;
																																							while true do
																																								if (1 == v296) then
																																									while true do
																																										if (0 == v297) then
																																											v298 = v198[4 - 2];
																																											v196[v298] = v196[v298](v21(v196, v298 + 1, v198[5 - 2]));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v296 == 0) then
																																									v297 = 0;
																																									v298 = nil;
																																									v296 = 1;
																																								end
																																							end
																																						end
																																					elseif (v199 <= 30) then
																																						local v299 = 0;
																																						local v300;
																																						local v301;
																																						while true do
																																							if (v299 == 0) then
																																								v300 = 0;
																																								v301 = nil;
																																								v299 = 1;
																																							end
																																							if (1 == v299) then
																																								while true do
																																									if (0 == v300) then
																																										v301 = v198[2];
																																										do
																																											return v196[v301](v21(v196, v301 + ((2334 - 1076) - (1247 + 10)), v166));
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					elseif (v199 == (893 - (147 + 715))) then
																																						local v366 = 0;
																																						local v367;
																																						local v368;
																																						local v369;
																																						local v370;
																																						while true do
																																							if (v366 == 1) then
																																								v369 = nil;
																																								v370 = nil;
																																								v366 = 2;
																																							end
																																							if (v366 == 0) then
																																								v367 = 0;
																																								v368 = nil;
																																								v366 = 1;
																																							end
																																							if (v366 == 2) then
																																								while true do
																																									if (v367 == 1) then
																																										v370 = v198[3 + 0];
																																										for v468 = 1, v370 do
																																											v369[v468] = v196[v368 + v468];
																																										end
																																										break;
																																									end
																																									if (v367 == 0) then
																																										local v451 = 0;
																																										while true do
																																											if (v451 == 1) then
																																												v367 = 1;
																																												break;
																																											end
																																											if (v451 == 0) then
																																												v368 = v198[(334 + 615) - ((695 - 328) + 268 + 312)];
																																												v369 = v196[v368];
																																												v451 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					else
																																						v196[v198[2]] = {};
																																					end
																																				elseif (v199 <= (186 - (119 + 19))) then
																																					if (v199 <= ((3468 - 2228) - ((877 - 422) + 369 + 376))) then
																																						if (v199 <= (898 - (623 + 239))) then
																																							if (v199 <= (58 - 24)) then
																																								if (v199 > (33 + (0 - 0))) then
																																									if (v196[v198[3 - 1]] < v196[v198[680 - (139 + 537)]]) then
																																										v165 = v165 + (3 - 2);
																																									else
																																										v165 = v198[(3065 - (1173 + 380)) - (659 + (3424 - 2574))];
																																									end
																																								elseif (v198[1 + 1] == v196[v198[1 + 3]]) then
																																									v165 = v165 + 1 + 0;
																																								else
																																									v165 = v198[1 + 2];
																																								end
																																							elseif (v199 > (60 - 25)) then
																																								local v302 = 0;
																																								local v303;
																																								local v304;
																																								while true do
																																									if (1 == v302) then
																																										while true do
																																											if (v303 == 0) then
																																												local v407 = 0;
																																												while true do
																																													if (v407 == 0) then
																																														v304 = v198[2];
																																														v166 = (v304 + v197) - (1772 - (859 + 912));
																																														v407 = 1;
																																													end
																																													if (v407 == 1) then
																																														v303 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (1 == v303) then
																																												for v433 = v304, v166 do
																																													local v434 = 0;
																																													local v435;
																																													local v436;
																																													while true do
																																														if (v434 == 1) then
																																															while true do
																																																if (v435 == 0) then
																																																	v436 = v194[v433 - v304];
																																																	v196[v433] = v436;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																														if (v434 == 0) then
																																															v435 = 0;
																																															v436 = nil;
																																															v434 = 1;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v302 == 0) then
																																										v303 = 0;
																																										v304 = nil;
																																										v302 = 1;
																																									end
																																								end
																																							else
																																								do
																																									return v196[v198[9 - 7]];
																																								end
																																							end
																																						elseif (v199 <= 38) then
																																							if (v199 > ((1594 - 342) - (167 + 1048))) then
																																								v196[v198[2 + 0]] = v196[v198[1927 - (402 + (5151 - 3629))]][v196[v198[1 + 1 + (426 - (141 + 283))]]];
																																							else
																																								v196[v198[2]] = v65[v198[3]];
																																							end
																																						elseif (v199 == (66 - 27)) then
																																							v196[v198[1 + 1]] = v196[v198[1700 - (1123 + 574)]] % v196[v198[4]];
																																						else
																																							v196[v198[142 - (80 + 60)]] = v196[v198[3]] + v198[4];
																																						end
																																					elseif (v199 <= (2006 - (1461 + 501))) then
																																						if (v199 <= (21 + 21)) then
																																							if (v199 == (64 - 23)) then
																																								local v311 = 0;
																																								local v312;
																																								local v313;
																																								while true do
																																									if (0 == v311) then
																																										v312 = 0;
																																										v313 = nil;
																																										v311 = 1;
																																									end
																																									if (v311 == 1) then
																																										while true do
																																											if (v312 == 0) then
																																												v313 = v198[(37 + 631) - ((713 - (23 + 656)) + 632)];
																																												v196[v313] = v196[v313](v21(v196, v313 + 1, v166));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								local v314 = 0;
																																								local v315;
																																								local v316;
																																								while true do
																																									if (1 == v314) then
																																										while true do
																																											if (v315 == 0) then
																																												v316 = v196[v198[2 + 2]];
																																												if v316 then
																																													v165 = v165 + 1;
																																												else
																																													local v452 = 0;
																																													local v453;
																																													while true do
																																														if (0 == v452) then
																																															v453 = 0;
																																															while true do
																																																if (v453 == 0) then
																																																	v196[v198[5 - (1 + 2)]] = v316;
																																																	v165 = v198[2 + 1];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v314 == 0) then
																																										v315 = 0;
																																										v316 = nil;
																																										v314 = 1;
																																									end
																																								end
																																							end
																																						elseif (v199 > (6 + 37)) then
																																							v196[v198[2 + 0]][v196[v198[1 + 2]]] = v198[(15 - 11) + 0];
																																						else
																																							local v319 = 0;
																																							local v320;
																																							local v321;
																																							local v322;
																																							while true do
																																								if (v319 == 0) then
																																									v320 = 0;
																																									v321 = nil;
																																									v319 = 1;
																																								end
																																								if (v319 == 1) then
																																									v322 = nil;
																																									while true do
																																										if (v320 == 0) then
																																											local v411 = 0;
																																											while true do
																																												if (v411 == 0) then
																																													v321 = v198[(10 - 5) - (54 - (46 + 5))];
																																													v322 = v196[v321];
																																													v411 = 1;
																																												end
																																												if (v411 == 1) then
																																													v320 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v320 == 1) then
																																											for v437 = v321 + ((1498 - (809 + 380)) - (35 + 64 + 209)), v166 do
																																												v15(v322, v196[v437]);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v199 <= ((1860 - (915 + 920)) + 21)) then
																																						if (v199 > (15 + 30)) then
																																							local v323 = 0;
																																							local v324;
																																							local v325;
																																							while true do
																																								if (v323 == 1) then
																																									while true do
																																										if (v324 == 0) then
																																											v325 = v198[(877 - (698 + 173)) - (90 - (73 + 13))];
																																											do
																																												return v21(v196, v325, v325 + v198[(355 - (17 + 335)) + 0]);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v323 == 0) then
																																									v324 = 0;
																																									v325 = nil;
																																									v323 = 1;
																																								end
																																							end
																																						else
																																							v196[v198[1 + 1 + 0]][v198[3]] = v196[v198[1720 - ((4286 - 3204) + 99 + 535)]];
																																						end
																																					elseif (v199 == ((36 - 23) + 34)) then
																																						v196[v198[2]] = v196[v198[10 - 7]] % v198[(6 - 4) + 2];
																																					else
																																						local v329 = 0;
																																						local v330;
																																						local v331;
																																						local v332;
																																						local v333;
																																						while true do
																																							if (v329 == 0) then
																																								v330 = 0;
																																								v331 = nil;
																																								v329 = 1;
																																							end
																																							if (2 == v329) then
																																								while true do
																																									if (v330 == 0) then
																																										local v413 = 0;
																																										while true do
																																											if (v413 == 1) then
																																												v330 = 1;
																																												break;
																																											end
																																											if (v413 == 0) then
																																												v331 = v191[v198[3]];
																																												v332 = nil;
																																												v413 = 1;
																																											end
																																										end
																																									end
																																									if (v330 == 2) then
																																										for v438 = 1 - 0, v198[2 + 2] do
																																											local v439 = 0;
																																											local v440;
																																											local v441;
																																											while true do
																																												if (v439 == 1) then
																																													while true do
																																														if (v440 == 0) then
																																															local v510 = 0;
																																															while true do
																																																if (v510 == 1) then
																																																	v440 = 1;
																																																	break;
																																																end
																																																if (v510 == 0) then
																																																	v165 = v165 + (1 - 0);
																																																	v441 = v190[v165];
																																																	v510 = 1;
																																																end
																																															end
																																														end
																																														if (v440 == 1) then
																																															if (v441[2 - 1] == 20) then
																																																v333[v438 - 1] = {v196,v441[(3 - 0) + (1042 - (386 + 656))]};
																																															else
																																																v333[v438 - (1 + 0)] = {v64,v441[2 + 1]};
																																															end
																																															v195[#v195 + (1195 - (763 + 431))] = v333;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																												if (v439 == 0) then
																																													v440 = 0;
																																													v441 = nil;
																																													v439 = 1;
																																												end
																																											end
																																										end
																																										v196[v198[2]] = v48(v331, v332, v65);
																																										break;
																																									end
																																									if (v330 == 1) then
																																										local v415 = 0;
																																										while true do
																																											if (v415 == 0) then
																																												v333 = {};
																																												v332 = v18({}, {[v7("\22\136\57\29\5\205\49", "\73\215\80\115\97\168")]=function(v475, v476)
																																													local v489 = 0;
																																													local v490;
																																													local v491;
																																													while true do
																																														if (v489 == 0) then
																																															v490 = 0;
																																															v491 = nil;
																																															v489 = 1;
																																														end
																																														if (v489 == 1) then
																																															while true do
																																																if (v490 == 0) then
																																																	local v523 = 0;
																																																	while true do
																																																		if (v523 == 0) then
																																																			v491 = v333[v476];
																																																			return v491[(640 + 217) - (613 + 30 + 66 + 147)][v491[1 + 1 + 0]];
																																																		end
																																																	end
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end,[v7("\116\211\180\193\92\229\180\192\78\244", "\43\140\218\164")]=function(v475, v476, v477)
																																													local v492 = 0;
																																													local v493;
																																													local v494;
																																													while true do
																																														if (v492 == 0) then
																																															v493 = 0;
																																															v494 = nil;
																																															v492 = 1;
																																														end
																																														if (v492 == 1) then
																																															while true do
																																																if (v493 == 0) then
																																																	v494 = v333[v476];
																																																	v494[(1250 - (479 + 770)) + 0][v494[372 - (200 + 170)]] = v477;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end});
																																												v415 = 1;
																																											end
																																											if (v415 == 1) then
																																												v330 = 2;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v329 == 1) then
																																								v332 = nil;
																																								v333 = nil;
																																								v329 = 2;
																																							end
																																						end
																																					end
																																				elseif (v199 <= 56) then
																																					if (v199 <= 52) then
																																						if (v199 <= 50) then
																																							if (v199 > (1123 - (1071 + 3))) then
																																								local v334 = 0;
																																								local v335;
																																								local v336;
																																								local v337;
																																								local v338;
																																								local v339;
																																								while true do
																																									if (v334 == 1) then
																																										v337 = nil;
																																										v338 = nil;
																																										v334 = 2;
																																									end
																																									if (v334 == 2) then
																																										v339 = nil;
																																										while true do
																																											if (v335 == 2) then
																																												for v442 = v336, v166 do
																																													local v443 = 0;
																																													local v444;
																																													while true do
																																														if (v443 == 0) then
																																															v444 = 0;
																																															while true do
																																																if (v444 == 0) then
																																																	v339 = v339 + 1 + 0;
																																																	v196[v442] = v337[v339];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v335 == 1) then
																																												local v416 = 0;
																																												while true do
																																													if (v416 == 0) then
																																														v166 = (v338 + v336) - 1;
																																														v339 = 1983 - (1842 + 141);
																																														v416 = 1;
																																													end
																																													if (v416 == 1) then
																																														v335 = 2;
																																														break;
																																													end
																																												end
																																											end
																																											if (v335 == 0) then
																																												local v417 = 0;
																																												while true do
																																													if (v417 == 0) then
																																														v336 = v198[2 + 0];
																																														v337, v338 = v193(v196[v336](v196[v336 + (1 - 0)]));
																																														v417 = 1;
																																													end
																																													if (v417 == 1) then
																																														v335 = 1;
																																														break;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v334 == 0) then
																																										v335 = 0;
																																										v336 = nil;
																																										v334 = 1;
																																									end
																																								end
																																							else
																																								v196[v198[(4001 - 2398) - (1449 + (1653 - (1192 + 309)))]] = v198[11 - 8] + v196[v198[6 - (2 + 0)]];
																																							end
																																						elseif (v199 > ((43 + 40) - (1902 - (1539 + 331)))) then
																																							local v341 = 0;
																																							local v342;
																																							local v343;
																																							while true do
																																								if (v341 == 1) then
																																									while true do
																																										if (v342 == 0) then
																																											v343 = v198[2];
																																											do
																																												return v21(v196, v343, v166);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v341 == 0) then
																																									v342 = 0;
																																									v343 = nil;
																																									v341 = 1;
																																								end
																																							end
																																						elseif (v196[v198[2 + 0]] == v196[v198[631 - (112 + 515)]]) then
																																							v165 = v165 + 1;
																																						else
																																							v165 = v198[3];
																																						end
																																					elseif (v199 <= ((297 - 131) - 112)) then
																																						if (v199 > (199 - 146)) then
																																							v196[v198[1 + 1]] = v196[v198[3 + 0]][v198[1135 - (1027 + 104)]];
																																						elseif not v196[v198[2]] then
																																							v165 = v165 + (41 - (25 + 15));
																																						else
																																							v165 = v198[(125 + 643) - (121 + 644)];
																																						end
																																					elseif (v199 > 55) then
																																						v165 = v198[200 - (76 + 121)];
																																					elseif (v196[v198[1 + 1]] ~= v196[v198[1 + 3]]) then
																																						v165 = v165 + 1 + 0;
																																					else
																																						v165 = v198[3];
																																					end
																																				elseif (v199 <= 60) then
																																					if (v199 <= (8 + 50)) then
																																						if (v199 > ((500 - (169 + 198)) - (36 + 40))) then
																																							v196[v198[2 - (0 - 0)]] = v196[v198[7 - 4]] * v196[v198[1535 - (287 + 1244)]];
																																						else
																																							v196[v198[(2 - 0) - (1617 - (644 + 973))]]();
																																						end
																																					elseif (v199 == (320 - (156 + 105))) then
																																						v196[v198[506 - (227 + 277)]] = -v196[v198[3 + 0]];
																																					else
																																						local v349 = 0;
																																						local v350;
																																						local v351;
																																						local v352;
																																						while true do
																																							if (v349 == 0) then
																																								v350 = 0;
																																								v351 = nil;
																																								v349 = 1;
																																							end
																																							if (v349 == 1) then
																																								v352 = nil;
																																								while true do
																																									if (v350 == 1) then
																																										v196[v351 + 1] = v352;
																																										v196[v351] = v352[v198[(3075 - (184 + 1159)) - (1298 + (1577 - 1147))]];
																																										break;
																																									end
																																									if (0 == v350) then
																																										local v422 = 0;
																																										while true do
																																											if (v422 == 0) then
																																												v351 = v198[3 - 1];
																																												v352 = v196[v198[2 + 1 + (0 - 0)]];
																																												v422 = 1;
																																											end
																																											if (v422 == 1) then
																																												v350 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v199 <= (37 + 25)) then
																																					if (v199 == 61) then
																																						do
																																							return;
																																						end
																																					else
																																						local v353 = 0;
																																						local v354;
																																						local v355;
																																						local v356;
																																						local v357;
																																						local v358;
																																						while true do
																																							if (v353 == 1) then
																																								v356 = nil;
																																								v357 = nil;
																																								v353 = 2;
																																							end
																																							if (v353 == 0) then
																																								v354 = 0;
																																								v355 = nil;
																																								v353 = 1;
																																							end
																																							if (v353 == 2) then
																																								v358 = nil;
																																								while true do
																																									if (v354 == 2) then
																																										for v445 = v355, v166 do
																																											local v446 = 0;
																																											local v447;
																																											while true do
																																												if (v446 == 0) then
																																													v447 = 0;
																																													while true do
																																														if (v447 == 0) then
																																															v358 = v358 + (215 - (179 + 35));
																																															v196[v445] = v356[v358];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v354 == 0) then
																																										local v423 = 0;
																																										while true do
																																											if (v423 == 0) then
																																												v355 = v198[604 - (3 + 13 + 586)];
																																												v356, v357 = v193(v196[v355](v21(v196, v355 + (1644 - (432 + 1211)), v166)));
																																												v423 = 1;
																																											end
																																											if (v423 == 1) then
																																												v354 = 1;
																																												break;
																																											end
																																										end
																																									end
																																									if (v354 == 1) then
																																										local v424 = 0;
																																										while true do
																																											if (v424 == 0) then
																																												v166 = (v357 + v355) - (2 - 1);
																																												v358 = (1215 - (155 + 253)) - ((118 - 62) + 751);
																																												v424 = 1;
																																											end
																																											if (1 == v424) then
																																												v354 = 2;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v199 <= (12 + 51)) then
																																					v196[v198[1 + 1 + 0 + 0]] = v196[v198[3 + 0]] - v196[v198[(5 + 0) - (4 - 3)]];
																																				elseif (v199 > (215 - (54 + 97))) then
																																					local v377 = 0;
																																					local v378;
																																					local v379;
																																					local v380;
																																					local v381;
																																					while true do
																																						if (2 == v377) then
																																							while true do
																																								if (v378 == 2) then
																																									if (v380 > (1291 - (197 + 1094))) then
																																										if (v381 <= v196[v379 + 1 + 0]) then
																																											local v500 = 0;
																																											local v501;
																																											while true do
																																												if (0 == v500) then
																																													v501 = 0;
																																													while true do
																																														if (v501 == 0) then
																																															v165 = v198[(2000 - (1678 + 303)) - (14 + 2)];
																																															v196[v379 + 1 + 2] = v381;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																									elseif (v381 >= v196[v379 + 1 + 0]) then
																																										local v502 = 0;
																																										local v503;
																																										while true do
																																											if (v502 == 0) then
																																												v503 = 0;
																																												while true do
																																													if (0 == v503) then
																																														v165 = v198[3];
																																														v196[v379 + (425 - (105 + 317))] = v381;
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v378 == 1) then
																																									local v454 = 0;
																																									while true do
																																										if (v454 == 1) then
																																											v378 = 2;
																																											break;
																																										end
																																										if (v454 == 0) then
																																											v381 = v196[v379] + v380;
																																											v196[v379] = v381;
																																											v454 = 1;
																																										end
																																									end
																																								end
																																								if (v378 == 0) then
																																									local v455 = 0;
																																									while true do
																																										if (0 == v455) then
																																											v379 = v198[2];
																																											v380 = v196[v379 + 2 + 0];
																																											v455 = 1;
																																										end
																																										if (v455 == 1) then
																																											v378 = 1;
																																											break;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																						if (v377 == 0) then
																																							v378 = 0;
																																							v379 = nil;
																																							v377 = 1;
																																						end
																																						if (v377 == 1) then
																																							v380 = nil;
																																							v381 = nil;
																																							v377 = 2;
																																						end
																																					end
																																				else
																																					local v382 = 0;
																																					local v383;
																																					local v384;
																																					while true do
																																						if (v382 == 0) then
																																							v383 = 0;
																																							v384 = nil;
																																							v382 = 1;
																																						end
																																						if (v382 == 1) then
																																							while true do
																																								if (0 == v383) then
																																									v384 = v198[2 + 0];
																																									v196[v384](v196[v384 + 1]);
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				v165 = v165 + 1;
																																				break;
																																			end
																																			if (0 == v205) then
																																				local v219 = 0;
																																				while true do
																																					if (v219 == 0) then
																																						v198 = v190[v165];
																																						v199 = v198[(272 - (190 + 80)) - (603 - (328 + 274))];
																																						v219 = 1;
																																					end
																																					if (v219 == 1) then
																																						v205 = 1;
																																						break;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (1 == v189) then
																															v194 = {};
																															v195 = {};
																															v196 = {};
																															for v206 = 0 + 0, v168 do
																																if (v206 >= v192) then
																																	v194[v206 - v192] = v167[v206 + (168 - (166 + 1))];
																																else
																																	v196[v206] = v167[v206 + 1];
																																end
																															end
																															v189 = 2;
																														end
																													end
																												end;
																												v179 = 1;
																											end
																											if (1 == v179) then
																												v164 = 3;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v100 == 0) then
															v101 = 0;
															v102 = nil;
															v100 = 1;
														end
													end
												end;
												v57 = 1;
											end
										end
									end
									if (v36 == 0) then
										local v58 = 0;
										while true do
											if (v58 == 1) then
												v25 = v12(v11(v25, (1390 - (441 + 517)) - ((164 - (83 + 55)) + (1833 - 1432))), v7("\154\154", "\180\180\62\112"), function(v66)
													if (v9(v66, 2 + 0 + 0) == 79) then
														local v111 = 0;
														local v112;
														while true do
															if (v111 == 0) then
																v112 = 0;
																while true do
																	if (v112 == 0) then
																		local v125 = 0;
																		while true do
																			if (v125 == 0) then
																				v38 = v8(v11(v66, 1 + 0 + 0, 1 - 0));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v113 = 0;
														local v114;
														local v115;
														while true do
															if (1 == v113) then
																while true do
																	if (v114 == 0) then
																		v115 = v10(v8(v66, 16));
																		if v38 then
																			local v141 = 0;
																			local v142;
																			local v143;
																			while true do
																				if (v141 == 1) then
																					while true do
																						local v172 = 0;
																						while true do
																							if (v172 == 0) then
																								if (v142 == 1) then
																									return v143;
																								end
																								if (v142 == 0) then
																									local v180 = 0;
																									while true do
																										if (v180 == 0) then
																											v143 = v13(v115, v38);
																											v38 = nil;
																											v180 = 1;
																										end
																										if (v180 == 1) then
																											v142 = 1;
																											break;
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (v141 == 0) then
																					v142 = 0;
																					v143 = nil;
																					v141 = 1;
																				end
																			end
																		else
																			return v115;
																		end
																		break;
																	end
																end
																break;
															end
															if (0 == v113) then
																v114 = 0;
																v115 = nil;
																v113 = 1;
															end
														end
													end
												end);
												v39 = nil;
												v58 = 2;
											end
											if (v58 == 2) then
												v36 = 1;
												break;
											end
											if (v58 == 0) then
												v37 = 373 - (260 + 33 + 79);
												v38 = nil;
												v58 = 1;
											end
										end
									end
									v51 = 1;
								end
							end
						end
						break;
					end
					if (v35 == 2) then
						v44 = nil;
						v45 = nil;
						v46 = nil;
						v47 = nil;
						v35 = 3;
					end
					if (v35 == 1) then
						v40 = nil;
						v41 = nil;
						v42 = nil;
						v43 = nil;
						v35 = 2;
					end
				end
			end;
			vv17(), ...);
			break;
		end
		if (v24 == 0) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v24 = 1;
		end
		if (4 == v24) then
			v11 = _G[v7("\152\34\95\77\81\91", "\235\86\45\36\63\60\209")][v7("\51\190\43", "\64\203\73\54\236\25\186")];
			v12 = _G[v7("\182\57\85\124\171\42", "\197\77\39\21")][v7("\126\15\60\232", "\25\124\73\138\45\122\71")];
			v13 = _G[v7("\39\243\151\92\57\163", "\84\135\229\53\87\196\93")][v7("\180\214\166", "\198\179\214\197\40\50\88\118")];
			v24 = 5;
		end
		if (v24 == 1) then
			v3 = bit32 or bit;
			v4 = v3.bxor;
			v5 = table.concat;
			v24 = 2;
		end
		if (v24 == 7) then
			v20 = _G[v7("\12\0\174\249\28\17", "\127\101\194\156")];
			v21 = _G[v7("\69\242\60\222\189\91", "\48\156\76\191\222")] or _G[v7("\71\170\2\167\205", "\51\203\96\203\168")][v7("\45\27\15\206\186\243", "\88\117\127\175\217\152\183")];
			v22 = _G[v7("\111\68\165\98\185\247\116\105", "\27\43\203\23\212\149\17")];
			v24 = 8;
		end
		if (5 == v24) then
			v14 = _G[v7("\106\129\40\190\58", "\30\224\74\210\95\136\63")][v7("\47\85\48\162\45\78", "\76\58\94\193")];
			v15 = _G[v7("\30\26\36\1\5", "\106\123\70\109\96\21\129\62")][v7("\186\209\37\50\221\239", "\211\191\86\87\175\155\208")];
			v16 = _G[v7("\21\45\92\250", "\120\76\40\146\67\43\118\63")][v7("\33\29\32\193\2", "\77\121\69\185\114\233")];
			v24 = 6;
		end
		if (v24 == 6) then
			v17 = _G[v7("\91\199\157\74\115\167\211", "\60\162\233\44\22\201\165")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\149\34\49\161\131\51\36\184\135\37\41\169", "\230\71\69\204")];
			v19 = _G[v7("\2\160\191\224\240", "\114\195\222\140\156")];
			v24 = 7;
		end
		if (v24 == 3) then
			v8 = _G[v7("\175\239\133\236\95\120\161\164", "\219\128\235\153\50\26\196\214")];
			v9 = _G[v7("\42\85\99\200\113\62", "\89\33\17\161\31")][v7("\35\110\195\233", "\65\23\183\140")];
			v10 = _G[v7("\149\10\32\172\136\25", "\230\126\82\197")][v7("\92\224\194\64", "\63\136\163\50\72")];
			v24 = 4;
		end
		if (v24 == 2) then
			v6 = table.insert;
			v7 = nil;
			v7 = function(v33, v34)
				local v49 = 0;
				local v50;
				while true do
					if (v49 == 1) then
						return v5(v50);
					end
					if (v49 == 0) then
						v50 = {};
						for v52 = 1, #v33 do
							v6(v50, v0(v4(v1(v2(v33, v52, v52 + 1)), v1(v2(v34, 1 + ((v52 - 1) % #v34), 1 + ((v52 - 1) % #v34) + 1))) % 256));
						end
						v49 = 1;
					end
				end
			end;
			v24 = 3;
		end
	end
end
